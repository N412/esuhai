// <auto-generated />
using System;
using Esuhai.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Esuhai.Api.Migrations
{
    [DbContext(typeof(ESUHAI_HRContext))]
    [Migration("20191007094837_updateModelForLeave")]
    partial class updateModelForLeave
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Esuhai.Api.Models.Allowance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short?>("AfternoonCount");

                    b.Property<short?>("AllowanceTimeHoliday")
                        .HasColumnName("AllowanceTime_Holiday");

                    b.Property<short?>("AllowanceTimeWeekday")
                        .HasColumnName("AllowanceTime_Weekday");

                    b.Property<short?>("AllowanceTimeWeekend")
                        .HasColumnName("AllowanceTime_Weekend");

                    b.Property<int>("AllowanceType");

                    b.Property<short?>("ApprovalAfternoonCount");

                    b.Property<short?>("ApprovalAllowanceTime");

                    b.Property<short?>("ApprovalMorningAfternoonCount");

                    b.Property<short?>("ApprovalMorningCount");

                    b.Property<short?>("ApprovalOvernightCount");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("HrApprovalNote")
                        .HasColumnName("HR_ApprovalNote")
                        .HasMaxLength(4000);

                    b.Property<string>("HrApprovalStatus")
                        .HasColumnName("HR_ApprovalStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("HrEndDate")
                        .HasColumnName("HR_EndDate")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("HrStartDate")
                        .HasColumnName("HR_StartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdNhanVien");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<short?>("MorningAfternoonCount");

                    b.Property<short?>("MorningCount");

                    b.Property<short?>("NumberAllowanceTime");

                    b.Property<short?>("OvernightCount");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<string>("TpApprovalNote")
                        .HasColumnName("TP_ApprovalNote")
                        .HasMaxLength(4000);

                    b.Property<string>("TpApprovalStatus")
                        .HasColumnName("TP_ApprovalStatus")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("ALLOWANCE");
                });

            modelBuilder.Entity("Esuhai.Api.Models.AllowanceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AllowanceCode")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AllowanceName")
                        .HasMaxLength(250);

                    b.Property<double?>("Cost");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("AllowanceType");
                });

            modelBuilder.Entity("Esuhai.Api.Models.AttachmentFiles", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("FileName")
                        .HasMaxLength(255);

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasMaxLength(500);

                    b.Property<int>("ItemId");

                    b.Property<string>("ItemType")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("AttachmentFiles");
                });

            modelBuilder.Entity("Esuhai.Api.Models.Configuration", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CfgKey")
                        .IsRequired()
                        .HasColumnName("cfgKey")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CfgValue")
                        .IsRequired()
                        .HasColumnName("cfgValue")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Configuration");
                });

            modelBuilder.Entity("Esuhai.Api.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("DeptManager")
                        .HasMaxLength(100);

                    b.Property<string>("DeptName")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Department");
                });

            modelBuilder.Entity("Esuhai.Api.Models.DieuChinhNgayCong", b =>
                {
                    b.Property<short>("Month");

                    b.Property<short>("Year");

                    b.Property<int>("IdNhanVien");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<double?>("DieuChinhGiam");

                    b.Property<double?>("DieuChinhTang");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.HasKey("Month", "Year", "IdNhanVien");

                    b.ToTable("DieuChinhNgayCong");
                });

            modelBuilder.Entity("Esuhai.Api.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Ban");

                    b.Property<string>("CardNo")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<bool?>("ChamCongBangTay");

                    b.Property<string>("ChucDanh")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("FullName")
                        .HasMaxLength(200);

                    b.Property<string>("Ho")
                        .HasMaxLength(50);

                    b.Property<int?>("ListItemId")
                        .HasColumnName("ListItemID");

                    b.Property<string>("MaNv")
                        .IsRequired()
                        .HasColumnName("MaNV")
                        .HasMaxLength(10);

                    b.Property<string>("Mobile")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<bool?>("NotActive");

                    b.Property<bool?>("NotRemind");

                    b.Property<int?>("Phong");

                    b.Property<int?>("SpuserId")
                        .HasColumnName("SPUserID");

                    b.Property<string>("SpuserName")
                        .HasColumnName("SPUserName")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<int?>("TbxetDuyet")
                        .HasColumnName("TBXetDuyet");

                    b.Property<string>("Ten")
                        .HasMaxLength(50);

                    b.Property<string>("TinhTrang")
                        .HasMaxLength(50);

                    b.Property<int?>("TpxetDuyet")
                        .HasColumnName("TPXetDuyet");

                    b.Property<int?>("WorkingShiftId");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Esuhai.Api.Models.Leave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("rowId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("Days");

                    b.Property<int>("EmployeeId")
                        .HasColumnName("EmpId");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("HRApprovalStatus");

                    b.Property<int>("HRId");

                    b.Property<string>("LeaveStatus");

                    b.Property<string>("LyDoNghi");

                    b.Property<int>("NhanVienThayTheId");

                    b.Property<string>("NoiDungThayThe");

                    b.Property<string>("PaymentStatus");

                    b.Property<int>("RequestId");

                    b.Property<string>("RequestStatus");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("TruongBanApprovalStatus");

                    b.Property<int>("TruongBanId");

                    b.Property<string>("TruongPhongApprovalStatus");

                    b.Property<int>("TruongPhongId");

                    b.HasKey("Id");

                    b.ToTable("Leave");
                });

            modelBuilder.Entity("Esuhai.Api.Models.MonthlyTimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("BtNgayCong")
                        .HasColumnName("BT_NgayCong");

                    b.Property<double?>("BtQuaDem")
                        .HasColumnName("BT_QuaDem");

                    b.Property<double?>("BtSang")
                        .HasColumnName("BT_Sang");

                    b.Property<double?>("BtSangTrua")
                        .HasColumnName("BT_SangTrua");

                    b.Property<double?>("BtTrua")
                        .HasColumnName("BT_Trua");

                    b.Property<double?>("CongPhep");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<double?>("DieuChinhTangGiam");

                    b.Property<double?>("DonKhach");

                    b.Property<string>("GhiChuDieuChinh")
                        .HasMaxLength(500);

                    b.Property<string>("GhiChuPhanBo")
                        .HasMaxLength(500);

                    b.Property<int>("IdNhanVien");

                    b.Property<double?>("InLater");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<short>("Month");

                    b.Property<double?>("NgayPhepThangSau");

                    b.Property<double?>("NghiLe");

                    b.Property<double?>("NghiPhep");

                    b.Property<double?>("NghiViecRieng");

                    b.Property<double?>("OthoursNgayLe")
                        .HasColumnName("OTHours_NgayLe");

                    b.Property<double?>("OthoursNgayNghi")
                        .HasColumnName("OTHours_NgayNghi");

                    b.Property<double?>("OthoursNgayThuong")
                        .HasColumnName("OTHours_NgayThuong");

                    b.Property<double?>("OutEarly");

                    b.Property<double?>("TimesheetNgayCong")
                        .HasColumnName("Timesheet_NgayCong");

                    b.Property<double?>("TonPhep");

                    b.Property<double?>("TongNgayCong");

                    b.Property<double?>("TruCong");

                    b.Property<double?>("TruPhep");

                    b.Property<double?>("ViecCaNhan");

                    b.Property<double?>("XuatCanhNgayLe")
                        .HasColumnName("XuatCanh_NgayLe");

                    b.Property<double?>("XuatCanhNgayNghi")
                        .HasColumnName("XuatCanh_NgayNghi");

                    b.Property<double?>("XuatCanhNgayThuong")
                        .HasColumnName("XuatCanh_NgayThuong");

                    b.Property<short>("Year");

                    b.HasKey("Id");

                    b.ToTable("MonthlyTimeSheet");
                });

            modelBuilder.Entity("Esuhai.Api.Models.Overtime", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("ApprovalHours");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("HrApprovalNote")
                        .HasColumnName("HR_ApprovalNote")
                        .HasMaxLength(4000);

                    b.Property<string>("HrApprovalStatus")
                        .HasColumnName("HR_ApprovalStatus")
                        .HasMaxLength(50);

                    b.Property<int>("IdNhanVien");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<double?>("OthoursHoliday")
                        .HasColumnName("OTHours_Holiday");

                    b.Property<double?>("OthoursWeekday")
                        .HasColumnName("OTHours_Weekday");

                    b.Property<double?>("OthoursWeekend")
                        .HasColumnName("OTHours_Weekend");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("smalldatetime");

                    b.Property<double?>("RequestedHours");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<string>("TbApprovalNote")
                        .HasColumnName("TB_ApprovalNote")
                        .HasMaxLength(500);

                    b.Property<string>("TbApprovalStatus")
                        .HasColumnName("TB_ApprovalStatus")
                        .HasMaxLength(50);

                    b.Property<string>("TpApprovalNote")
                        .HasColumnName("TP_ApprovalNote")
                        .HasMaxLength(4000);

                    b.Property<string>("TpApprovalStatus")
                        .HasColumnName("TP_ApprovalStatus")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("OVERTIME");
                });

            modelBuilder.Entity("Esuhai.Api.Models.PhanBoNgayCongThieu", b =>
                {
                    b.Property<short>("Month");

                    b.Property<short>("Year");

                    b.Property<int>("IdNhanVien");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Description")
                        .HasMaxLength(1000);

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<double?>("TruCong");

                    b.Property<double?>("TruPhep");

                    b.HasKey("Month", "Year", "IdNhanVien")
                        .HasName("PK_PhanBoNgayCongThieu_1");

                    b.ToTable("PhanBoNgayCongThieu");
                });

            modelBuilder.Entity("Esuhai.Api.Models.PublicHolidays", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Day")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FixDay")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Note")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("PublicHolidays");
                });

            modelBuilder.Entity("Esuhai.Api.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<int?>("DepartmentId")
                        .HasColumnName("DepartmentID");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("SectionManager")
                        .HasMaxLength(10);

                    b.Property<string>("SectionName")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Section");
                });

            modelBuilder.Entity("Esuhai.Api.Models.TimeSheet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CardNo")
                        .HasMaxLength(16)
                        .IsUnicode(false);

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<string>("HrApprovalNote")
                        .HasColumnName("HR_ApprovalNote")
                        .HasMaxLength(500);

                    b.Property<string>("HrApprovalStatus")
                        .HasColumnName("HR_ApprovalStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("HrTimeIn")
                        .HasColumnName("HR_TimeIn")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("HrTimeOut")
                        .HasColumnName("HR_TimeOut")
                        .HasColumnType("smalldatetime");

                    b.Property<int>("IdNhanVien");

                    b.Property<DateTime?>("ManualIn")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ManualOut")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<short>("Month");

                    b.Property<string>("RequestorNote")
                        .HasMaxLength(500);

                    b.Property<DateTime?>("SendDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftBreakFrom")
                        .HasColumnName("Shift_BreakFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftBreakTo")
                        .HasColumnName("Shift_BreakTo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftFromTime")
                        .HasColumnName("Shift_FromTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ShiftToTime")
                        .HasColumnName("Shift_ToTime")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<string>("TbApprovalNote")
                        .HasColumnName("TB_ApprovalNote")
                        .HasMaxLength(500);

                    b.Property<string>("TbApprovalStatus")
                        .HasColumnName("TB_ApprovalStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("TimeIn")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TimeOut")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("TpApprovalNote")
                        .HasColumnName("TP_ApprovalNote")
                        .HasMaxLength(500);

                    b.Property<string>("TpApprovalStatus")
                        .HasColumnName("TP_ApprovalStatus")
                        .HasMaxLength(50);

                    b.Property<DateTime>("WorkingDate")
                        .HasColumnType("smalldatetime");

                    b.Property<short>("Year");

                    b.HasKey("Id");

                    b.ToTable("TimeSheet");
                });

            modelBuilder.Entity("Esuhai.Api.Models.TongHopDuLieu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("BreakFrom")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("BreakTo")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("BtEndTime")
                        .HasColumnName("BT_EndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("BtId")
                        .HasColumnName("BT_ID");

                    b.Property<double?>("BtNgayCong")
                        .HasColumnName("BT_NgayCong");

                    b.Property<DateTime?>("BtStartTime")
                        .HasColumnName("BT_StartTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<double?>("FinalGioCong")
                        .HasColumnName("Final_GioCong");

                    b.Property<DateTime?>("FinalIn")
                        .HasColumnName("Final_In")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("FinalOut")
                        .HasColumnName("Final_Out")
                        .HasColumnType("smalldatetime");

                    b.Property<int?>("IdNhanVien");

                    b.Property<double?>("InLater");

                    b.Property<bool?>("IsHoliday");

                    b.Property<bool?>("IsWeekend");

                    b.Property<DateTime?>("LeaveEndTime")
                        .HasColumnName("Leave_EndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<double?>("LeaveHopLeNgayCong")
                        .HasColumnName("LeaveHopLe_NgayCong");

                    b.Property<int?>("LeaveId")
                        .HasColumnName("Leave_ID");

                    b.Property<double?>("LeaveKhongHopLeNgayNghi")
                        .HasColumnName("LeaveKhongHopLe_NgayNghi");

                    b.Property<DateTime?>("LeaveStartTime")
                        .HasColumnName("Leave_StartTime")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("LeaveStatus")
                        .HasColumnName("Leave_Status")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Ngay")
                        .HasColumnType("date");

                    b.Property<double?>("NgayCong");

                    b.Property<double?>("NghiLeNgayCong")
                        .HasColumnName("NghiLe_NgayCong");

                    b.Property<double?>("OutEarly");

                    b.Property<DateTime?>("ShiftEndTime")
                        .HasColumnName("Shift_EndTime")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("ShiftStartTime")
                        .HasColumnName("Shift_StartTime")
                        .HasColumnType("smalldatetime");

                    b.Property<double?>("TimesheetGioCong")
                        .HasColumnName("Timesheet_GioCong");

                    b.Property<double?>("TimesheetNgayCong")
                        .HasColumnName("Timesheet_NgayCong");

                    b.Property<DateTime?>("TimesheetTimeIn")
                        .HasColumnName("Timesheet_TimeIn")
                        .HasColumnType("smalldatetime");

                    b.Property<DateTime?>("TimesheetTimeOut")
                        .HasColumnName("Timesheet_TimeOut")
                        .HasColumnType("smalldatetime");

                    b.HasKey("Id");

                    b.ToTable("TongHopDuLieu");
                });

            modelBuilder.Entity("Esuhai.Api.Models.WorkingDayPerMonth", b =>
                {
                    b.Property<short>("Month");

                    b.Property<short>("Year");

                    b.Property<bool?>("ChotCong");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("smalldatetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<double?>("TotalWorkingDay");

                    b.HasKey("Month", "Year")
                        .HasName("PK_WorkingDayOfMonth");

                    b.ToTable("WorkingDayPerMonth");
                });

            modelBuilder.Entity("Esuhai.Api.Models.WorkingShifts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BreakFrom")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("BreakTo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50);

                    b.Property<DateTime>("FromTime")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50);

                    b.Property<string>("Note")
                        .HasMaxLength(255);

                    b.Property<string>("ShiftName")
                        .HasMaxLength(255);

                    b.Property<DateTime>("ToTime")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("WorkingShifts");
                });
#pragma warning restore 612, 618
        }
    }
}
